---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tinkerpop-graphdb-schema-loader

spec:
  replicas: ${GRAPHDB_PERSONA_SCHEMA_LOADER_K8S_REPLICAS}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: ${GRAPHDB_PERSONA_SCHEMA_LOADER_K8S_REPLICAS_MAX_UNAVAILABLE}
      maxSurge: ${GRAPHDB_PERSONA_SCHEMA_LOADER_K8S_REPLICAS}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "${GRAPHDB_COMMON_PROMETHEUS_JMX_PORT}"

      labels:
        name: tinkerpop-graphdb-schema-loader
    spec:
      containers:
        - name: tinkerpop-graphdb-schema-loader
          image: ${GRAPHDB_PERSONA_SCHEMA_LOADER_K8S_IMAGE}
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /opt/graphdb/conf
              name: config
              readOnly: true
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: tinkerpop-graphdb
                  key: AWS_ACCESS_KEY_ID

            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: tinkerpop-graphdb
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_DEFAULT_REGION
              value: eu-west-2
            - name: GRAPHDB_OPTS
              value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap   -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -javaagent:/opt/graphdb/lib/graphdb-*.jar=${GRAPHDB_COMMON_PROMETHEUS_JMX_PORT}:/opt/graphdb/conf/graphdb-prometheus-jmx.yaml 
            - name: SYSDIG_AGENT_CONF
              value: '{"jmx":{"per_process_beans":{"graphdb":{"pattern":"uk.gov.homeoffice.cdp.App","beans":[{"query":"graphdb:name=org.janusgraph.query.graph.execute.time","attributes":[{"name":"Max"},{"name":"Min"},{"name":"Mean"},{"name":"Count","type":"counter"}]}]}}}}'

              # Unfortunately, This does not work, as JMX changes require agent configs to be changed.
              #value: '{"jmx":{"per_process_beans":{"graphdb":{"pattern":"uk.gov.homeoffice.cdp.App","beans":[{"query":"graphdb:name=org.janusgraph.query.graph.execute.time","attributes":[{"name":"Max"},{"name":"Min"},{"name":"Mean"},{"name":"Count","type":"counter"}]}]}}}}'
          resources:
            requests:
              cpu: ${GRAPHDB_PERSONA_SCHEMA_LOADER_K8S_REQUESTS_CPU}
              memory: ${GRAPHDB_PERSONA_SCHEMA_LOADER_K8S_REQUESTS_MEMORY}
            limits:
              cpu: ${GRAPHDB_PERSONA_SCHEMA_LOADER_K8S_LIMITS_CPU}
              memory: ${GRAPHDB_PERSONA_SCHEMA_LOADER_K8S_LIMITS_MEMORY}
          readinessProbe:
            httpGet:
              path: /healthcheck/readiness
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /healthcheck/liveliness
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 30
          command: ["/opt/graphdb/bin/run-graph.sh", "/opt/graphdb/conf/gremlin-server-embedded.yml" ]
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: tinkerpop-graphdb-schema-loader



---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: tinkerpop-graphdb-schema-loader
    role: service
  name: tinkerpop-graphdb-schema-loader
spec:
  ports:
    - name: http
      protocol: TCP
      targetPort: ${GRAPHDB_PERSONA_SCHEMA_LOADER_PORT}
      port: ${GRAPHDB_PERSONA_SCHEMA_LOADER_PORT}
  selector:
    name: tinkerpop-graphdb-schema-loader
  sessionAffinity: None

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-network-policy-tinkerpop-graphdb-schema-loader
spec:
  podSelector:
    matchLabels:
      name: tinkerpop-graphdb-schema-loader
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ${KUBE_NAMESPACE}
      ports:
        - protocol: TCP
          port: ${GRAPHDB_PERSONA_SCHEMA_LOADER_PORT}

  
